<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byType">

    <!-- 缓存管理 -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:conf/spring/ehcache.xml</value>
		</property>
	</bean>
	
	<!-- 方法的缓存   配置一个简单的缓存工厂bean对象 -->
	<bean id="methodCache"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager" />
		</property>
		<!-- 使用缓存 关联ehcache.xml中的缓存配置 -->
		<property name="cacheName">
			<value>METHOD_CACHE</value>
		</property>
	</bean>
	
	<!-- 方法缓存过滤操作  配置一个缓存拦截器对象，处理具体的缓存业务-->
	<bean id="methodCacheInterceptor"
		class="com.ffcs.atte.comomon.echache.MethodCacheInterceptor">
		<property name="cache">
			<ref local="methodCache" />
		</property>
	</bean>


	<!-- 参与缓存的切入点对象 (切入点对象，确定何时何地调用拦截器) -->
	<bean id="methodCachePointCut"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<!-- 配置缓存aop切面 -->
		<property name="advice" ref="methodCacheInterceptor" />
		<!-- 配置哪些方法参与缓存策略 -->
		<!-- .表示符合任何单一字元 ### +表示符合前一个字元一次或多次 ### *表示符合前一个字元零次或多次 ### \Escape任何Regular 
			expression使用到的符号 -->
		<!-- .*表示前面的前缀(包括包名) 表示print方法 -->
		<property name="patterns">
			<list>
				<value>com.ffcs.atte.config.service.impl.*.*query*.*</value>
			</list>
		</property>
	</bean>
</beans>

